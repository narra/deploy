version: '3.8'

services:
  router:
    image: traefik:latest
    command:
      - --api=true
      - --api.dashboard=true
      - --providers.docker=true
      - --providers.docker.network=${NARRA_STACK_NAME}_external
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - 80:80
    expose:
      - 8080
    networks:
      - external
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.rule=Host(`${NARRA_ROUTER_HOSTNAME}`)
      - traefik.http.services.traefik.loadbalancer.server.port=8080
    restart: on-failure
  mongo:
    image: mongo:latest
    volumes:
      - mongo:/data/db
    networks:
      internal:
        ipv4_address: 172.42.2.2
    restart: on-failure
  redis:
    image: redis:latest
    volumes:
      - redis:/data
    networks:
      internal:
        ipv4_address: 172.42.2.3
    restart: on-failure
  storage:
    image: minio/minio:latest
    volumes:
      - storage:/data
    environment:
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
    command: server --address :80 /data
    expose:
      - 80
    networks:
      external:
      internal:
        ipv4_address: 172.42.2.4
    labels:
      - traefik.enable=true
      - traefik.http.routers.storage.rule=Host(`${NARRA_STORAGE_HOSTNAME}`)
      - traefik.http.services.storage.loadbalancer.server.port=80
    depends_on:
      - router
    restart: on-failure
  master:
    image: narra/master:latest
    volumes:
      - ./nginx/client_max_body_size.conf:/etc/nginx/conf.d/client_max_body_size.conf
    environment:
      - NARRA_STACK_NAME=${NARRA_STACK_NAME}
      - NARRA_INSTANCE_NAME=${NARRA_INSTANCE_NAME}
      - PASSENGER_APP_ENV=${PASSENGER_APP_ENV}
      - NARRA_ENV=${NARRA_ENV}
      - NARRA_API_HOSTNAME=${NARRA_API_HOSTNAME}
      - NARRA_STORAGE_HOSTNAME=${NARRA_STORAGE_HOSTNAME}
      - NARRA_EDITOR_HOSTNAME=${NARRA_EDITOR_HOSTNAME}
      - NARRA_ROUTER_HOSTNAME=${NARRA_ROUTER_HOSTNAME}
      - NARRA_PLUGINS=${NARRA_PLUGINS}
      - AWS_ACCESS_KEY=${AWS_ACCESS_KEY}
      - AWS_SECRET=${AWS_SECRET}
      - AWS_REGION=${AWS_REGION}
      - AWS_BUCKET=${AWS_BUCKET}
      - GOOGLE_STORAGE_BUCKET=${GOOGLE_STORAGE_BUCKET}
      - GOOGLE_STORAGE_ID=${GOOGLE_STORAGE_ID}
      - GOOGLE_STORAGE_SECRET=${GOOGLE_STORAGE_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - GITLAB_CLIENT_SERVER=${GITLAB_CLIENT_SERVER}
      - GITLAB_CLIENT_ID=${GITLAB_CLIENT_ID}
      - GITLAB_CLIENT_SECRET=${GITLAB_CLIENT_SECRET}
    labels:
      - traefik.enable=true
      - traefik.http.routers.narra.rule=Host(`${NARRA_API_HOSTNAME}`)
      - traefik.http.services.narra.loadbalancer.server.port=80
    expose:
      - 80
    networks:
      external:
      internal:
        ipv4_address: 172.42.2.5
    extra_hosts:
      - "${NARRA_STORAGE_HOSTNAME}: 172.42.2.4"
      - "${NARRA_API_HOSTNAME}: 172.42.2.5"
    depends_on:
      - router
      - mongo
      - redis
      - storage
    restart: on-failure
  storage_init:
    image: minio/mc:latest
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc config host add storage http://${NARRA_STORAGE_HOSTNAME} ${MINIO_ACCESS_KEY} ${MINIO_SECRET_KEY};
      /usr/bin/mc mb --ignore-existing storage/narra;
      /usr/bin/mc policy set download storage/narra;
      exit 0;
      "
    networks:
      internal:
        ipv4_address: 172.42.2.6
    extra_hosts:
      - "${NARRA_STORAGE_HOSTNAME}: 172.42.2.4"
    depends_on:
      - storage
  worker_alfa:
    image: narra/worker:latest
    depends_on:
      - master
      - mongo
      - redis
      - storage
      - storage_init
    environment:
      - NARRA_WORKER_TYPE=master
      - NARRA_STACK_NAME=${NARRA_STACK_NAME}
      - NARRA_INSTANCE_NAME=${NARRA_INSTANCE_NAME}
      - PASSENGER_APP_ENV=${PASSENGER_APP_ENV}
      - NARRA_ENV=${NARRA_ENV}
      - NARRA_API_HOSTNAME=${NARRA_API_HOSTNAME}
      - NARRA_STORAGE_HOSTNAME=${NARRA_STORAGE_HOSTNAME}
      - NARRA_EDITOR_HOSTNAME=${NARRA_EDITOR_HOSTNAME}
      - NARRA_ROUTER_HOSTNAME=${NARRA_ROUTER_HOSTNAME}
      - NARRA_PLUGINS=${NARRA_PLUGINS}
      - AWS_ACCESS_KEY=${AWS_ACCESS_KEY}
      - AWS_SECRET=${AWS_SECRET}
      - AWS_REGION=${AWS_REGION}
      - AWS_BUCKET=${AWS_BUCKET}
      - GOOGLE_STORAGE_BUCKET=${GOOGLE_STORAGE_BUCKET}
      - GOOGLE_STORAGE_ID=${GOOGLE_STORAGE_ID}
      - GOOGLE_STORAGE_SECRET=${GOOGLE_STORAGE_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - GITLAB_CLIENT_SERVER=${GITLAB_CLIENT_SERVER}
      - GITLAB_CLIENT_ID=${GITLAB_CLIENT_ID}
      - GITLAB_CLIENT_SECRET=${GITLAB_CLIENT_SECRET}
    networks:
      - internal
    extra_hosts:
      - "${NARRA_STORAGE_HOSTNAME}: 172.42.2.4"
      - "${NARRA_API_HOSTNAME}: 172.42.2.5"
    restart: on-failure
  worker_bravo:
    image: narra/worker:latest
    depends_on:
      - master
      - mongo
      - redis
      - storage
    environment:
      - NARRA_WORKER_TYPE=worker
      - NARRA_STACK_NAME=${NARRA_STACK_NAME}
      - NARRA_INSTANCE_NAME=${NARRA_INSTANCE_NAME}
      - PASSENGER_APP_ENV=${PASSENGER_APP_ENV}
      - NARRA_ENV=${NARRA_ENV}
      - NARRA_API_HOSTNAME=${NARRA_API_HOSTNAME}
      - NARRA_STORAGE_HOSTNAME=${NARRA_STORAGE_HOSTNAME}
      - NARRA_EDITOR_HOSTNAME=${NARRA_EDITOR_HOSTNAME}
      - NARRA_ROUTER_HOSTNAME=${NARRA_ROUTER_HOSTNAME}
      - NARRA_PLUGINS=${NARRA_PLUGINS}
      - AWS_ACCESS_KEY=${AWS_ACCESS_KEY}
      - AWS_SECRET=${AWS_SECRET}
      - AWS_REGION=${AWS_REGION}
      - AWS_BUCKET=${AWS_BUCKET}
      - GOOGLE_STORAGE_BUCKET=${GOOGLE_STORAGE_BUCKET}
      - GOOGLE_STORAGE_ID=${GOOGLE_STORAGE_ID}
      - GOOGLE_STORAGE_SECRET=${GOOGLE_STORAGE_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - GITLAB_CLIENT_SERVER=${GITLAB_CLIENT_SERVER}
      - GITLAB_CLIENT_ID=${GITLAB_CLIENT_ID}
      - GITLAB_CLIENT_SECRET=${GITLAB_CLIENT_SECRET}
    networks:
      - internal
    extra_hosts:
      - "${NARRA_STORAGE_HOSTNAME}: 172.42.2.4"
      - "${NARRA_API_HOSTNAME}: 172.42.2.5"
    restart: on-failure
  editor:
    image: narra/editor:latest
    volumes:
      - ./nginx/client_max_body_size.conf:/etc/nginx/conf.d/client_max_body_size.conf
    environment:
      - NARRA_STACK_NAME=${NARRA_STACK_NAME}
      - NARRA_INSTANCE_NAME=${NARRA_INSTANCE_NAME}
      - PASSENGER_APP_ENV=${PASSENGER_APP_ENV}
      - NARRA_ENV=${NARRA_ENV}
      - NARRA_API_HOSTNAME=${NARRA_API_HOSTNAME}
      - NARRA_STORAGE_HOSTNAME=${NARRA_STORAGE_HOSTNAME}
      - NARRA_EDITOR_HOSTNAME=${NARRA_EDITOR_HOSTNAME}
      - NARRA_ROUTER_HOSTNAME=${NARRA_ROUTER_HOSTNAME}
    labels:
      - traefik.enable=true
      - traefik.http.routers.editor.rule=Host(`${NARRA_EDITOR_HOSTNAME}`)
      - traefik.http.services.editor.loadbalancer.server.port=80
    expose:
      - 80
    networks:
      external:
    depends_on:
      - router
      - master
    restart: on-failure
networks:
  external:
    ipam:
      config:
        - subnet: 172.42.1.0/24
  internal:
    ipam:
      config:
        - subnet: 172.42.2.0/24
volumes:
  storage:
  mongo:
  redis:

